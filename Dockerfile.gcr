# This Dockerfile is used to build an image that can drop into
# Google Cloud Run.
#
# Prerequisites:
#  * Add https://cloud.google.com/secret-manager to your project
#  * Upload a tar.gz file containing the following files
#    * ca.crt: Your CockroachDB CA certificate
#    * hmac: Some BASE64-encoded random data for signing JWT tokens
#    * connect: A plain-text file containing the connection URL
#  * Create a "Serverless VPC Connector" unless you access your
#    database over the public Internet.
#  * If using Cockroach Cloud, enable VPC peering between your project
#    and Cockroach Cloud.
#  * Enable HTTP/2 (H2C) support in the service definition.
#  * Set the GCLOUD_SECRET_NAME to the long-form name of the
#    uploaded secret.
#  * Adjust the CACHE_MEMORY environment variable to reflect your
#    preferred container size.
#
# You may specify additional flags in the "container arguments".
#
# The disk cache is not enabled, since the Cloud Run disk is an
# in-memory filesystem that counts against the total memory budget.

FROM golang:1.15 AS builder
WORKDIR /tmp/compile
COPY . .
RUN CGO_ENABLED=0 go build -v -ldflags="-s -w" -o /usr/bin/cacheroach .

FROM scratch
# Expect $PORT from Cloud Run environment.
ENV CACHE_MEMORY="128" CONNECT="@connect" GCLOUD_SECRET_NAME="" HMAC="@hmac"
ENTRYPOINT [ \
  "/usr/bin/cacheroach", \
  "start", \
  "--bindAddr", ":$PORT", \
  "--cacheMemory", "$CACHE_MEMORY", \
  "--connect", "$CONNECT", \
  "--signingKey", "$HMAC" \
]
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /usr/bin/cacheroach /usr/bin/
